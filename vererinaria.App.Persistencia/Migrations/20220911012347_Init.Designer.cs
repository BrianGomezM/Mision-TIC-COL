// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using veterinaria.App.Persistencia;

namespace vererinaria.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContexto))]
    [Migration("20220911012347_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("veterinaria.App.Dominio.Gato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Raza")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gatos");
                });

            modelBuilder.Entity("veterinaria.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("veterinaria.App.Dominio.Visita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EstadoDeAnimo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaVisita")
                        .HasColumnType("datetime2");

                    b.Property<float>("FrecuenciaCardiaca")
                        .HasColumnType("real");

                    b.Property<float>("FrecuenciaRespiratoria")
                        .HasColumnType("real");

                    b.Property<int?>("GatoId")
                        .HasColumnType("int");

                    b.Property<int>("IdProfesional")
                        .HasColumnType("int");

                    b.Property<int>("Medicamentos")
                        .HasColumnType("int");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<int>("Recomendaciones")
                        .HasColumnType("int");

                    b.Property<float>("Temperatura")
                        .HasColumnType("real");

                    b.Property<int?>("VeterinarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GatoId");

                    b.HasIndex("VeterinarioId");

                    b.ToTable("Visitas");
                });

            modelBuilder.Entity("veterinaria.App.Dominio.Propietario", b =>
                {
                    b.HasBaseType("veterinaria.App.Dominio.Persona");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("duenioId")
                        .HasColumnType("int");

                    b.HasIndex("duenioId");

                    b.HasDiscriminator().HasValue("Propietario");
                });

            modelBuilder.Entity("veterinaria.App.Dominio.Veterinario", b =>
                {
                    b.HasBaseType("veterinaria.App.Dominio.Persona");

                    b.Property<string>("TargetaProfesional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("atiendeId")
                        .HasColumnType("int");

                    b.HasIndex("atiendeId");

                    b.HasDiscriminator().HasValue("Veterinario");
                });

            modelBuilder.Entity("veterinaria.App.Dominio.Visita", b =>
                {
                    b.HasOne("veterinaria.App.Dominio.Gato", null)
                        .WithMany("visitas")
                        .HasForeignKey("GatoId");

                    b.HasOne("veterinaria.App.Dominio.Veterinario", null)
                        .WithMany("visitas")
                        .HasForeignKey("VeterinarioId");
                });

            modelBuilder.Entity("veterinaria.App.Dominio.Propietario", b =>
                {
                    b.HasOne("veterinaria.App.Dominio.Gato", "duenio")
                        .WithMany()
                        .HasForeignKey("duenioId");

                    b.Navigation("duenio");
                });

            modelBuilder.Entity("veterinaria.App.Dominio.Veterinario", b =>
                {
                    b.HasOne("veterinaria.App.Dominio.Gato", "atiende")
                        .WithMany()
                        .HasForeignKey("atiendeId");

                    b.Navigation("atiende");
                });

            modelBuilder.Entity("veterinaria.App.Dominio.Gato", b =>
                {
                    b.Navigation("visitas");
                });

            modelBuilder.Entity("veterinaria.App.Dominio.Veterinario", b =>
                {
                    b.Navigation("visitas");
                });
#pragma warning restore 612, 618
        }
    }
}
